version: '3.7'

services:
  nginx:
    build:
      context: ./
      dockerfile: build/nginx/Dockerfile
    restart: always
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    depends_on:
      - auth

  auth:
    build:
      context: ./
      dockerfile: build/auth/Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    deploy:
      replicas: 1

  constructor:
    build:
      context: ./
      dockerfile: build/controller/Dockerfile
    
    restart: always
    depends_on:
      db:
        condition: service_started
      nats:
        condition: service_started
    deploy:
      replicas: 1
    volumes:
      - filedata:/app/uploads

  admin:
    build:
      context: ./
      dockerfile: build/admin/Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_started
    deploy:
      replicas: 1

  constructor_broker:
    container_name: constructor_worker
    build:
      context: ./
      dockerfile: build/constructor_txbroker/Dockerfile
      args:
        NATS_BROKER_CONNSTR: ${NATS_BROKER_CONNSTR}
        BUF: ${POOL_SIZE}
    restart: always
    depends_on:
        db:
          condition: service_started
        nats:
          condition: service_started
    deploy:
      replicas: 1


  db:
    build:
      context: ./build/db
      args:
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    tty: true
    stdin_open: true
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 20s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - "8099:8080"

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MYSQL_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://${MYSQL_USER}:${MYSQL_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  nats:
    image: nats:latest
    container_name: broker
    ports:
      - "4222:4222"
      - "8222:8222"
    environment:
      - NATS_USER=admin
      - NATS_PASSWORD=adminpass
      - NATS_AUTH_TIMEOUT=1


networks:
  default:
    driver: bridge

volumes:
  filedata:
  db-data:
  mongo-data:
